using SharpStix.Extensions;
using SharpStix.Serialisation.Json.Converters;
using System.Text.Json.Serialization;
using SharpStix.Services;

namespace SharpStix.StixTypes.Vocabulary;

[JsonConverter(typeof(StixOpenVocabConverter<MalwareResult>))]
[StixTypeDiscriminator(TYPE)]
public sealed record MalwareResult(string Value) : StixOpenVocab(Value)
{
    private const string TYPE = "malware-result-ov";

    public enum EMalwareResult
    {
        /// <summary>
        ///     The tool reported the malware binary as malicious.
        /// </summary>
        Malicious,

        /// <summary>
        ///     The tool reported the malware binary as suspicious but not definitively malicious.
        /// </summary>
        Suspicious,

        /// <summary>
        ///     The tool reported the malware binary as benign.
        /// </summary>
        Benign,

        /// <summary>
        ///     The tool was unable to determine whether the malware binary is malicious.
        /// </summary>
        Unknown
    }

    public MalwareResult(EMalwareResult value) : this(value.ToString().PascalToKebabCase())
    {
    }

    public override string Type => TYPE;
}