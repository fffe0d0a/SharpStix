using SharpStix.Extensions;

namespace SharpStix.StixTypes.Vocabulary;

public sealed record MalwareCapabilities(string Value) : StixOpenVocab(Value)
{
    public enum EMalwareCapabilities
    {
        /// <summary>
        ///     Indicates that the malware instance or family is able to access one or more remote machines.
        /// </summary>
        AccessesRemoteMachines,

        /// <summary>
        ///     Indicates that the malware instance or family is able to prevent itself from being debugged and/or from being run
        ///     in a debugger or is able to make debugging more difficult.
        /// </summary>
        AntiDebugging,

        /// <summary>
        ///     Indicates that the malware instance or family is able to prevent itself from being disassembled or make disassembly
        ///     more difficult.
        /// </summary>
        AntiDisassembly,

        /// <summary>
        ///     Indicates that the malware instance or family is able to prevent its execution inside of an emulator or is able to
        ///     make emulation more difficult.
        /// </summary>
        AntiEmulation,

        /// <summary>
        ///     Indicates that the malware instance or family is able to prevent or make memory forensics more difficult.
        /// </summary>
        AntiMemoryForensics,

        /// <summary>
        ///     Indicates that the malware instance or family is able to prevent sandbox-based behavioral analysis or make it more
        ///     difficult.
        /// </summary>
        AntiSandbox,

        /// <summary>
        ///     Indicates that the malware instance or family is able to prevent virtual machine (VM) based behavioral analysis or
        ///     make it more difficult.
        /// </summary>
        AntiVm,

        /// <summary>
        ///     Indicates that the malware instance or family is able to capture data from a system's input peripheral devices,
        ///     such as a keyboard or mouse. This includes things like keylogging.
        /// </summary>
        CapturesInputPeripherals,

        /// <summary>
        ///     Indicates that the malware instance or family captures data sent to a system's output peripherals, such as a
        ///     display. Examples include things like screen scraping.
        /// </summary>
        CapturesOutputPeripherals,

        /// <summary>
        ///     Indicates that the malware instance or family is able to capture information about a system's state (e.g., data
        ///     currently in its RAM).
        /// </summary>
        CapturesSystemStateData,

        /// <summary>
        ///     Indicates that the malware instance or family is able to clean traces of its infection (e.g., file system
        ///     artifacts) from a system.
        /// </summary>
        CleansTracesOfInfection,

        /// <summary>
        ///     Indicates that the malware instance or family commits fraud, such as click fraud (for example).
        /// </summary>
        CommitsFraud,

        /// <summary>
        ///     Indicates that the malware instance or family is able to communicate (i.e., send or receive data) with a command
        ///     and control (C2) server.
        /// </summary>
        CommunicatesWithC2,

        /// <summary>
        ///     Indicates that the malware instance or family is able to compromise the availability of data on the local system on
        ///     which it is executing and/or one or more remote systems. For example, encrypting data on disk, as done by
        ///     ransomware.
        /// </summary>
        CompromisesDataAvailability,

        /// <summary>
        ///     Indicates that the malware instance or family is able to compromise the integrity of some data that resides on
        ///     (e.g., in the case of files) or is received/transmitted (e.g., in the case of network traffic) by the system on
        ///     which it is executing.
        /// </summary>
        CompromisesDataIntegrity,

        /// <summary>
        ///     Indicates that the malware instance or family is able to consume system resources for its malicious purposes, such
        ///     as password cracking or participating in a DDoS botnet, thereby compromising the availability of the local system
        ///     and/or one or more remote systems.
        /// </summary>
        CompromisesSystemAvailability,

        /// <summary>
        ///     Indicates that the malware instance or family is able to control the machine on which it is executing (e.g., RATs).
        /// </summary>
        ControlsLocalMachine,

        /// <summary>
        ///     Indicates that the malware instance or family is able to bypass or disable security programs or operating system
        ///     security features on a system (including mobile devices), either by stopping them from executing or by making
        ///     changes to their code or configuration parameters. For example, malware that blocks the local machine from
        ///     accessing the websites of security vendors.
        /// </summary>
        DegradesSecuritySoftware,

        /// <summary>
        ///     Indicates that the malware instance or family is able to disable the downloading and installation of system updates
        ///     and patches.
        /// </summary>
        DegradesSystemUpdates,

        /// <summary>
        ///     Indicates that the malware instance or family is able to identify one or more command and control (C2) servers with
        ///     which to communicate (e.g., DGA).
        /// </summary>
        DeterminesC2Server,

        /// <summary>
        ///     Indicates that the malware instance or family is able to send spam email messages.
        /// </summary>
        EmailsSpam,

        /// <summary>
        ///     Indicates that the malware instance or family is able to escalate the privileges under which it is executing.
        /// </summary>
        EscalatesPrivileges,

        /// <summary>
        ///     Indicates that the malware instance or family is able to evade detection by antivirus tools.
        /// </summary>
        EvadesAv,

        /// <summary>
        ///     Indicates that the malware instance or family is able to gather, prepare, (possibly obfuscate) data and transmit it
        ///     to exfiltration points.
        /// </summary>
        ExfiltratesData,

        /// <summary>
        ///     Indicates that the malware instance or family is able to fingerprint or probe the configuration of the host system
        ///     on which it is executing for the purpose of altering its behavior based on this environment.
        /// </summary>
        FingerprintsHost,

        /// <summary>
        ///     Indicates that the malware instance or family is able to hide its artifacts, such as files and open ports.
        /// </summary>
        HidesArtifacts,

        /// <summary>
        ///     Indicates that the malware instance or family is able to hide its code by compromising the bootloader, kernel
        ///     modules, hypervisor, etc.
        /// </summary>
        HidesExecutingCode,

        /// <summary>
        ///     Indicates that the malware instance or family is able to infect one or more files on the system on which it
        ///     executes. For example, malware which injects a malicious payload into all PDFs on a host as a means of propagation.
        /// </summary>
        InfectsFiles,

        /// <summary>
        ///     Indicates that the malware instance or family is able to self-propagate to a remote machine or infect a remote
        ///     machine with malware that is different than itself.
        /// </summary>
        InfectsRemoteMachines,

        /// <summary>
        ///     Indicates that the malware instance or family is able to install additional components. This encompasses the
        ///     dropping/downloading of other malicious components such as libraries, other malware, and tools.
        /// </summary>
        InstallsOtherComponents,

        /// <summary>
        ///     Indicates that the malware instance or family is able to continue executing after the reboot of the system on which
        ///     it is resident.
        /// </summary>
        PersistsAfterSystemReboot,

        /// <summary>
        ///     Indicates that the malware instance or family is able to prevent its artifacts (e.g., files, registry keys, etc.)
        ///     from being accessed.
        /// </summary>
        PreventsArtifactAccess,

        /// <summary>
        ///     Indicates that the malware instance or family is able to prevent its artifacts (e.g., files, registry keys, etc.)
        ///     from being deleted.
        /// </summary>
        PreventsArtifactDeletion,

        /// <summary>
        ///     Indicates that the malware instance or family is able to probe the properties of its network environment, e.g. to
        ///     determine whether it funnels traffic through a proxy.
        /// </summary>
        ProbesNetworkEnvironment,

        /// <summary>
        ///     Indicates that the malware instance or family is able to modify itself.
        /// </summary>
        SelfModifies,

        /// <summary>
        ///     Indicates that the malware instance is able to steal authentication credentials.
        /// </summary>
        StealsAuthenticationCredentials,

        /// <summary>
        ///     Indicates that the malware instance or family is able to compromise the operational integrity of the system on
        ///     which it is executing and/or one or more remote systems, e.g., by causing them to operate beyond their set of
        ///     specified operational parameters. For example, malware that causes the CPU fan on the machine that it is executing
        ///     to spin at a higher than normal speed.
        /// </summary>
        ViolatesSystemOperationalIntegrity
    }

    public MalwareCapabilities(EMalwareCapabilities value) : this(value.ToString().PascalToKebabCase())
    {
    }

    public new static string TypeName => "malware-capabilities-ov";
}